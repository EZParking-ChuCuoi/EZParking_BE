{
    "openapi": "3.0.0",
    "info": {
        "title": "LARAVEL Rest API DOCUMENTATION",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/password/sendCode": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "send code to reset account",
                "operationId": "sendCode",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/password/confirm-reset": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "send code to reset account",
                "operationId": "checkCode",
                "parameters": [
                    {
                        "name": "otp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/password/reset": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "change password",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/account/register": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Register",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "fullName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/account/confirm-registration": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "confirm otp to create accont",
                "operationId": "confirmRegistration",
                "parameters": [
                    {
                        "name": "otp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/parking-lot/{id}/blocks": {
            "get": {
                "tags": [
                    "Block"
                ],
                "summary": "get all slot in this block",
                "operationId": "getBlock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parking lot to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/{id}/slots": {
            "get": {
                "tags": [
                    "Block"
                ],
                "summary": "get all slot in this block with detail status",
                "operationId": "getSlotStatusByBookingDateTime2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parking lot to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    },
                    {
                        "name": "start_datetime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2023-03-01 14:30:00"
                    },
                    {
                        "name": "end_datetime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2023-04-01 14:30:00"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/block/create": {
            "post": {
                "tags": [
                    "Block"
                ],
                "summary": "create block ,slot",
                "operationId": "createBlockSlot",
                "parameters": [
                    {
                        "name": "parkingLotId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1000000"
                    },
                    {
                        "name": "nameBlock",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Khu a"
                    },
                    {
                        "name": "carType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "4-16SLOT"
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "an toan cao"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 14000
                    },
                    {
                        "name": "numberOfSlot",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 50
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/booking/slots": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "show detail booking",
                "operationId": "getSlotsByIdWithBlockName",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "An array of integers.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "example": "[100000000,100000001]"
                    },
                    {
                        "name": "start_datetime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2023-03-01 14:30:00"
                    },
                    {
                        "name": "end_datetime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2023-04-01 14:30:00"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/booking/show": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Scan QRcode to get detail booking",
                "operationId": "getDetailQRcode",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    },
                    {
                        "name": "startDateTime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2023-02-27 14:30:00"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot": {
            "get": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "admin get all parking lot",
                "operationId": "index",
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/{id}/info/price": {
            "get": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "detail price of parking lot with id",
                "operationId": "getPriceOfParkingLot",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parking lot to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/{id}/info": {
            "get": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "detail parking lot with id",
                "operationId": "getInfoParkingLot",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parking lot to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/{id}/info/comment": {
            "get": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "detail comment of parking lot",
                "operationId": "showCommentOfParking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parking lot to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1000000
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/location": {
            "get": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "show location near user ",
                "operationId": "showParkingLotNearLocation",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 16.060832
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 108.24149
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/create": {
            "post": {
                "tags": [
                    "Parking Lot"
                ],
                "summary": "create parking lot ",
                "operationId": "createParkingLot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1000000
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "openTime": {
                                        "type": "date-time",
                                        "example": "20:08"
                                    },
                                    "endTime": {
                                        "type": "date-time",
                                        "example": "21:08"
                                    },
                                    "nameParkingLot": {
                                        "type": "string",
                                        "example": "Parking Lot Cong"
                                    },
                                    "address_latitude": {
                                        "type": "string",
                                        "example": "16.060832"
                                    },
                                    "address_longitude": {
                                        "type": "string",
                                        "example": "108.241491"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "101B Le Huu Tra"
                                    },
                                    "desc": {
                                        "type": "string",
                                        "example": "gia ra dat an ninh coa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/parking-lot/upload": {
            "post": {
                "tags": [
                    "Upload image"
                ],
                "summary": "create parking lot ",
                "operationId": "uploadImage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/owner/create/{id}": {
            "post": {
                "tags": [
                    "Space owner"
                ],
                "summary": "become owner parking lot",
                "description": "Update the user's profile.",
                "operationId": "becomeSpaceOwner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "integer"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "businessScale": {
                                        "type": "string",
                                        "example": "local"
                                    },
                                    "imageCardIdBef": {
                                        "type": "file"
                                    },
                                    "imageCardIdAft": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/user/": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "get all user",
                "operationId": "getAllUser",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/user/{id}/role": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "check role user",
                "operationId": "getRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/user/update/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "description": "Update the user's profile.",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "fullName": {
                                        "type": "string"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "avatar": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "passport": {
                "type": "apiKey",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "name": "Authorization",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}